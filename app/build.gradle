plugins {
    id 'com.android.application'
    id 'com.bugsnag.android.gradle'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'realm-android'
    id 'kotlin-parcelize'
}

apply plugin: 'com.getkeepsafe.dexcount'

def gitSha() {
    def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        return ""
    }
    return p.text.trim()
}

android {
    def packageName = "eu.darken.bluemusic"

    signingConfigs {
        release {}
    }
    Properties signingProps = new Properties()
    def signingPropFile = new File(System.properties['user.home'], ".appconfig/${packageName}/signing.properties")
    if (signingPropFile.canRead()) signingProps.load(new FileInputStream(signingPropFile))

    String keyStorePath = System.getenv("STORE_PATH") ?: signingProps["release.storePath"]
    File keyStore = keyStorePath ? new File(keyStorePath) : null
    if (keyStore?.canRead()) {
        signingConfigs {
            release {
                storeFile keyStore
                storePassword System.getenv("STORE_PASSWORD") ?: signingProps['release.storePassword']
                keyAlias System.getenv("KEY_ALIAS") ?: signingProps['release.keyAlias']
                keyPassword System.getenv("KEY_PASSWORD") ?: signingProps['release.keyPassword']
            }
        }
    }

    compileSdkVersion buildConfig.compileSdk

    def versionMajor = 2
    def versionMinor = 53
    def versionTag = ""

    Properties bugsnagProps = new Properties()
    def bugsnagPropsFile = new File(System.properties['user.home'], ".appconfig/${packageName}/bugsnag.properties")
    if (bugsnagPropsFile.canRead()) bugsnagProps.load(new FileInputStream(bugsnagPropsFile))
    String bugSnagApiKey = System.getenv("KEY_PASSWORD") ?: bugsnagProps.getProperty("bugsnag.apikey", "")

    defaultConfig {
        applicationId "${packageName}"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode versionMajor * 10000 + versionMinor
        versionName "${versionMajor}.${versionMinor}${versionTag}"
        manifestPlaceholders = [bugsnagApiKey: "60879455b6b7234ca04b8282247d143c"]
    }
    lintOptions {
        abortOnError false
        ignore 'CheckResult'
    }
    buildTypes {
        def proguardRulesRelease = fileTree(dir: "proguard", include: ["*.pro"]).asList().toArray()
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFiles proguardRulesRelease
            proguardFiles 'proguard-rules-debug.pro'
            //debuggable false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFiles proguardRulesRelease
            testProguardFiles getDefaultProguardFile('proguard-android.txt')
            testProguardFiles proguardRulesRelease
            manifestPlaceholders = [bugsnagApiKey: bugSnagApiKey]
        }
        applicationVariants.all { variant ->
            if (variant.buildType.name != "debug") {
                variant.outputs.each { output ->
                    output.outputFileName = applicationId + "-v" + defaultConfig.versionName + "(" + defaultConfig.versionCode + ")-" + variant.buildType.name.toUpperCase() + "-" + gitSha() + ".apk"
                }
            }
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
}


dependencies {
    // Support libs
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "com.google.android.material:material:1.4.0"
    implementation "androidx.legacy:legacy-preference-v14:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    implementation "androidx.lifecycle:lifecycle-common:2.3.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // Crashtracking
    implementation('com.bugsnag:bugsnag-android:5.9.2') {
//        exclude group: "com.bugsnag", module: "bugsnag-plugin-android-anr"
        exclude group: "com.bugsnag", module: "bugsnag-plugin-android-ndk"
    }

    // RX
    implementation "io.reactivex.rxjava3:rxjava:3.1.1"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
    implementation "io.reactivex.rxjava3:rxkotlin:3.0.1"
    implementation 'com.jakewharton.rx3:replaying-share:3.0.0'
    implementation "com.jakewharton.rx3:replaying-share-kotlin:3.0.0"

    //Dagger
    implementation "com.google.dagger:dagger:${buildConfig.deps.dagger}"
    kapt "com.google.dagger:dagger-compiler:${buildConfig.deps.dagger}"
    kaptAndroidTest "com.google.dagger:dagger-compiler:${buildConfig.deps.dagger}"
    androidTestImplementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation "com.google.dagger:dagger-android:${buildConfig.deps.dagger}"
    implementation "com.google.dagger:dagger-android-support:${buildConfig.deps.dagger}"

    //Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // jUnit
    testImplementation 'junit:junit:4.13.2'

    // Mocktio
    androidTestImplementation 'org.mockito:mockito-core:3.9.0'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'

    //Intrumentation tests (UI tests)
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.0-alpha03'

    // IAP
    implementation 'com.android.billingclient:billing:4.0.0'
}